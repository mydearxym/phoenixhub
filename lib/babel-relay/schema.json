{"data":{"__schema":{"types":[{"possibleTypes":null,"name":"Boolean","kind":"SCALAR","interfaces":null,"inputFields":null,"fields":null,"enumValues":null,"description":"The `Boolean` scalar type represents `true` or `false`.\n"},{"possibleTypes":null,"name":"CreateLinkInput","kind":"INPUT_OBJECT","interfaces":null,"inputFields":[{"type":{"ofType":{"ofType":null,"name":"String","kind":"SCALAR"},"name":null,"kind":"NON_NULL"},"name":"clientMutationId","description":null,"defaultValue":null},{"type":{"ofType":{"ofType":null,"name":"String","kind":"SCALAR"},"name":null,"kind":"NON_NULL"},"name":"title","description":null,"defaultValue":null},{"type":{"ofType":{"ofType":null,"name":"String","kind":"SCALAR"},"name":null,"kind":"NON_NULL"},"name":"url","description":null,"defaultValue":null}],"fields":null,"enumValues":null,"description":""},{"possibleTypes":null,"name":"CreateLinkPayload","kind":"OBJECT","interfaces":[],"inputFields":null,"fields":[{"type":{"ofType":{"ofType":null,"name":"String","kind":"SCALAR"},"name":null,"kind":"NON_NULL"},"name":"clientMutationId","isDeprecated":null,"description":null,"deprecationReason":null,"args":[]},{"type":{"ofType":null,"name":"LinkEdge","kind":"OBJECT"},"name":"linkEdge","isDeprecated":null,"description":null,"deprecationReason":null,"args":[]},{"type":{"ofType":null,"name":"Store","kind":"OBJECT"},"name":"store","isDeprecated":null,"description":null,"deprecationReason":null,"args":[]}],"enumValues":null,"description":""},{"possibleTypes":null,"name":"ID","kind":"SCALAR","interfaces":null,"inputFields":null,"fields":null,"enumValues":null,"description":"The `ID` scalar type represents a unique identifier, often used to\nrefetch an object or as key for a cache. The ID type appears in a JSON\nresponse as a String; however, it is not intended to be human-readable.\nWhen expected as an input type, any string (such as `\"4\"`) or integer\n(such as `4`) input value will be accepted as an ID.\n"},{"possibleTypes":null,"name":"Int","kind":"SCALAR","interfaces":null,"inputFields":null,"fields":null,"enumValues":null,"description":"The `Int` scalar type represents non-fractional signed whole numeric\nvalues. Int can represent values between -(2^53 - 1) and 2^53 - 1 since\nrepresented in JSON as double-precision floating point numbers specified\nby [IEEE 754](http://en.wikipedia.org/wiki/IEEE_floating_point).\n"},{"possibleTypes":null,"name":"Link","kind":"OBJECT","interfaces":[],"inputFields":null,"fields":[{"type":{"ofType":null,"name":"String","kind":"SCALAR"},"name":"createdAt","isDeprecated":null,"description":null,"deprecationReason":null,"args":[]},{"type":{"ofType":null,"name":"String","kind":"SCALAR"},"name":"id","isDeprecated":null,"description":null,"deprecationReason":null,"args":[]},{"type":{"ofType":null,"name":"String","kind":"SCALAR"},"name":"title","isDeprecated":null,"description":null,"deprecationReason":null,"args":[]},{"type":{"ofType":null,"name":"String","kind":"SCALAR"},"name":"url","isDeprecated":null,"description":null,"deprecationReason":null,"args":[]}],"enumValues":null,"description":""},{"possibleTypes":null,"name":"LinkConnection","kind":"OBJECT","interfaces":[],"inputFields":null,"fields":[{"type":{"ofType":{"ofType":null,"name":"LinkEdge","kind":"OBJECT"},"name":null,"kind":"LIST"},"name":"edges","isDeprecated":null,"description":"Information to aid in pagination.","deprecationReason":null,"args":[]},{"type":{"ofType":{"ofType":null,"name":"PageInfo","kind":"OBJECT"},"name":null,"kind":"NON_NULL"},"name":"pageInfo","isDeprecated":null,"description":"Information to aid in pagination.","deprecationReason":null,"args":[]}],"enumValues":null,"description":"A connection to a list of items."},{"possibleTypes":null,"name":"LinkEdge","kind":"OBJECT","interfaces":[],"inputFields":null,"fields":[{"type":{"ofType":{"ofType":null,"name":"String","kind":"SCALAR"},"name":null,"kind":"NON_NULL"},"name":"cursor","isDeprecated":null,"description":"A cursor for use in pagination","deprecationReason":null,"args":[]},{"type":{"ofType":null,"name":"Link","kind":"OBJECT"},"name":"node","isDeprecated":null,"description":"The item at the end of the edge","deprecationReason":null,"args":[]}],"enumValues":null,"description":"An edge in a connection."},{"possibleTypes":null,"name":"Mutation","kind":"OBJECT","interfaces":[],"inputFields":null,"fields":[{"type":{"ofType":null,"name":"CreateLinkPayload","kind":"OBJECT"},"name":"createLink","isDeprecated":null,"description":null,"deprecationReason":null,"args":[{"type":{"ofType":{"ofType":null,"name":"CreateLinkInput","kind":"INPUT_OBJECT"},"name":null,"kind":"NON_NULL"},"name":"input","description":null,"defaultValue":null}]}],"enumValues":null,"description":""},{"possibleTypes":[{"ofType":null,"name":"Store","kind":"OBJECT"}],"name":"Node","kind":"INTERFACE","interfaces":null,"inputFields":null,"fields":[{"type":{"ofType":{"ofType":null,"name":"ID","kind":"SCALAR"},"name":null,"kind":"NON_NULL"},"name":"id","isDeprecated":null,"description":"The id of the object.","deprecationReason":null,"args":[]}],"enumValues":null,"description":"An object with an ID"},{"possibleTypes":null,"name":"PageInfo","kind":"OBJECT","interfaces":[],"inputFields":null,"fields":[{"type":{"ofType":null,"name":"String","kind":"SCALAR"},"name":"endCursor","isDeprecated":null,"description":"When paginating forwards, the cursor to continue.","deprecationReason":null,"args":[]},{"type":{"ofType":{"ofType":null,"name":"Boolean","kind":"SCALAR"},"name":null,"kind":"NON_NULL"},"name":"hasNextPage","isDeprecated":null,"description":"When paginating forwards, are there more items?","deprecationReason":null,"args":[]},{"type":{"ofType":{"ofType":null,"name":"Boolean","kind":"SCALAR"},"name":null,"kind":"NON_NULL"},"name":"hasPreviousPage","isDeprecated":null,"description":"When paginating backwards, are there more items?","deprecationReason":null,"args":[]},{"type":{"ofType":null,"name":"String","kind":"SCALAR"},"name":"startCursor","isDeprecated":null,"description":"When paginating backwards, the cursor to continue.","deprecationReason":null,"args":[]}],"enumValues":null,"description":"Information about pagination in a connection."},{"possibleTypes":null,"name":"Query","kind":"OBJECT","interfaces":[],"inputFields":null,"fields":[{"type":{"ofType":null,"name":"Node","kind":"INTERFACE"},"name":"node","isDeprecated":null,"description":"Fetches an object given its ID","deprecationReason":null,"args":[{"type":{"ofType":{"ofType":null,"name":"ID","kind":"SCALAR"},"name":null,"kind":"NON_NULL"},"name":"id","description":"The ID of an object","defaultValue":null}]},{"type":{"ofType":null,"name":"Store","kind":"OBJECT"},"name":"store","isDeprecated":null,"description":null,"deprecationReason":null,"args":[]}],"enumValues":null,"description":""},{"possibleTypes":null,"name":"Store","kind":"OBJECT","interfaces":[{"ofType":null,"name":"Node","kind":"INTERFACE"}],"inputFields":null,"fields":[{"type":{"ofType":{"ofType":null,"name":"ID","kind":"SCALAR"},"name":null,"kind":"NON_NULL"},"name":"id","isDeprecated":null,"description":"The ID of an object","deprecationReason":null,"args":[]},{"type":{"ofType":null,"name":"LinkConnection","kind":"OBJECT"},"name":"linkConnection","isDeprecated":null,"description":null,"deprecationReason":null,"args":[{"type":{"ofType":null,"name":"String","kind":"SCALAR"},"name":"after","description":null,"defaultValue":null},{"type":{"ofType":null,"name":"String","kind":"SCALAR"},"name":"before","description":null,"defaultValue":null},{"type":{"ofType":null,"name":"Int","kind":"SCALAR"},"name":"first","description":null,"defaultValue":null},{"type":{"ofType":null,"name":"Int","kind":"SCALAR"},"name":"last","description":null,"defaultValue":null},{"type":{"ofType":null,"name":"String","kind":"SCALAR"},"name":"query","description":null,"defaultValue":null}]}],"enumValues":null,"description":""},{"possibleTypes":null,"name":"String","kind":"SCALAR","interfaces":null,"inputFields":null,"fields":null,"enumValues":null,"description":"The `String` scalar type represents textual data, represented as UTF-8\ncharacter sequences. The String type is most often used by GraphQL to\nrepresent free-form human-readable text.\n"},{"possibleTypes":null,"name":"__Directive","kind":"OBJECT","interfaces":[],"inputFields":null,"fields":[{"type":{"ofType":{"ofType":{"ofType":{"name":"__InputValue","kind":"OBJECT"},"name":null,"kind":"NON_NULL"},"name":null,"kind":"LIST"},"name":null,"kind":"NON_NULL"},"name":"args","isDeprecated":null,"description":null,"deprecationReason":null,"args":[]},{"type":{"ofType":null,"name":"String","kind":"SCALAR"},"name":"description","isDeprecated":null,"description":null,"deprecationReason":null,"args":[]},{"type":{"ofType":{"ofType":null,"name":"String","kind":"SCALAR"},"name":null,"kind":"NON_NULL"},"name":"name","isDeprecated":null,"description":null,"deprecationReason":null,"args":[]},{"type":{"ofType":{"ofType":null,"name":"Boolean","kind":"SCALAR"},"name":null,"kind":"NON_NULL"},"name":"onField","isDeprecated":null,"description":null,"deprecationReason":null,"args":[]},{"type":{"ofType":{"ofType":null,"name":"Boolean","kind":"SCALAR"},"name":null,"kind":"NON_NULL"},"name":"onFragment","isDeprecated":null,"description":null,"deprecationReason":null,"args":[]},{"type":{"ofType":{"ofType":null,"name":"Boolean","kind":"SCALAR"},"name":null,"kind":"NON_NULL"},"name":"onOperation","isDeprecated":null,"description":null,"deprecationReason":null,"args":[]}],"enumValues":null,"description":"A Directive provides a way to describe alternate runtime execution and\ntype validation behavior in a GraphQL document.\n\nIn some cases, you need to provide options to alter GraphQLâ€™s\nexecution behavior in ways field arguments will not suffice, such as\nconditionally including or skipping a field. Directives provide this by\ndescribing additional information to the executor\n"},{"possibleTypes":null,"name":"__EnumValue","kind":"OBJECT","interfaces":[],"inputFields":null,"fields":[{"type":{"ofType":null,"name":"String","kind":"SCALAR"},"name":"deprecationReason","isDeprecated":null,"description":null,"deprecationReason":null,"args":[]},{"type":{"ofType":null,"name":"String","kind":"SCALAR"},"name":"description","isDeprecated":null,"description":null,"deprecationReason":null,"args":[]},{"type":{"ofType":{"ofType":null,"name":"Boolean","kind":"SCALAR"},"name":null,"kind":"NON_NULL"},"name":"isDeprecated","isDeprecated":null,"description":null,"deprecationReason":null,"args":[]},{"type":{"ofType":{"ofType":null,"name":"String","kind":"SCALAR"},"name":null,"kind":"NON_NULL"},"name":"name","isDeprecated":null,"description":null,"deprecationReason":null,"args":[]}],"enumValues":null,"description":"One possible value for a given Enum. Enum values are unique values, not\na placeholder for a string or numeric value. However an Enum value is\nreturned in a JSON response as a string.\n"},{"possibleTypes":null,"name":"__Field","kind":"OBJECT","interfaces":[],"inputFields":null,"fields":[{"type":{"ofType":{"ofType":{"ofType":{"name":"__InputValue","kind":"OBJECT"},"name":null,"kind":"NON_NULL"},"name":null,"kind":"LIST"},"name":null,"kind":"NON_NULL"},"name":"args","isDeprecated":null,"description":null,"deprecationReason":null,"args":[]},{"type":{"ofType":null,"name":"String","kind":"SCALAR"},"name":"deprecationReason","isDeprecated":null,"description":null,"deprecationReason":null,"args":[]},{"type":{"ofType":null,"name":"String","kind":"SCALAR"},"name":"description","isDeprecated":null,"description":null,"deprecationReason":null,"args":[]},{"type":{"ofType":{"ofType":null,"name":"Boolean","kind":"SCALAR"},"name":null,"kind":"NON_NULL"},"name":"isDeprecated","isDeprecated":null,"description":null,"deprecationReason":null,"args":[]},{"type":{"ofType":{"ofType":null,"name":"String","kind":"SCALAR"},"name":null,"kind":"NON_NULL"},"name":"name","isDeprecated":null,"description":null,"deprecationReason":null,"args":[]},{"type":{"ofType":{"ofType":null,"name":"__Type","kind":"OBJECT"},"name":null,"kind":"NON_NULL"},"name":"type","isDeprecated":null,"description":null,"deprecationReason":null,"args":[]}],"enumValues":null,"description":"Object and Interface types are described by a list of Fields, each of\nwhich has a name, potentially a list of arguments, and a return type.\n"},{"possibleTypes":null,"name":"__InputValue","kind":"OBJECT","interfaces":[],"inputFields":null,"fields":[{"type":{"ofType":null,"name":"String","kind":"SCALAR"},"name":"defaultValue","isDeprecated":null,"description":"A GraphQL-formatted string representing the default value for this input value.","deprecationReason":null,"args":[]},{"type":{"ofType":null,"name":"String","kind":"SCALAR"},"name":"description","isDeprecated":null,"description":null,"deprecationReason":null,"args":[]},{"type":{"ofType":{"ofType":null,"name":"String","kind":"SCALAR"},"name":null,"kind":"NON_NULL"},"name":"name","isDeprecated":null,"description":null,"deprecationReason":null,"args":[]},{"type":{"ofType":{"ofType":null,"name":"__Type","kind":"OBJECT"},"name":null,"kind":"NON_NULL"},"name":"type","isDeprecated":null,"description":null,"deprecationReason":null,"args":[]}],"enumValues":null,"description":"Arguments provided to Fields or Directives and the input fields of an\nInputObject are represented as Input Values which describe their type\nand optionally a default value.\n"},{"possibleTypes":null,"name":"__Schema","kind":"OBJECT","interfaces":[],"inputFields":null,"fields":[{"type":{"ofType":{"ofType":{"ofType":{"name":"__Directive","kind":"OBJECT"},"name":null,"kind":"NON_NULL"},"name":null,"kind":"LIST"},"name":null,"kind":"NON_NULL"},"name":"directives","isDeprecated":null,"description":"A list of all directives supported by this server.","deprecationReason":null,"args":[]},{"type":{"ofType":null,"name":"__Type","kind":"OBJECT"},"name":"mutationType","isDeprecated":null,"description":"If this server supports mutation, the type that mutation operations will be rooted at.","deprecationReason":null,"args":[]},{"type":{"ofType":{"ofType":null,"name":"__Type","kind":"OBJECT"},"name":null,"kind":"NON_NULL"},"name":"queryType","isDeprecated":null,"description":"The type that query operations will be rooted at.","deprecationReason":null,"args":[]},{"type":{"ofType":null,"name":"__Type","kind":"OBJECT"},"name":"subscriptionType","isDeprecated":null,"description":"If this server support subscription, the type that subscription operations will be rooted at.","deprecationReason":null,"args":[]},{"type":{"ofType":{"ofType":{"ofType":{"name":"__Type","kind":"OBJECT"},"name":null,"kind":"NON_NULL"},"name":null,"kind":"LIST"},"name":null,"kind":"NON_NULL"},"name":"types","isDeprecated":null,"description":"A list of all types supported by this server.","deprecationReason":null,"args":[]}],"enumValues":null,"description":"A GraphQL Schema defines the capabilities of a GraphQL server. It\nexposes all available types and directives on the server, as well as\nthe entry points for query, mutation, and subscription operations.\n"},{"possibleTypes":null,"name":"__Type","kind":"OBJECT","interfaces":[],"inputFields":null,"fields":[{"type":{"ofType":null,"name":"String","kind":"SCALAR"},"name":"description","isDeprecated":null,"description":null,"deprecationReason":null,"args":[]},{"type":{"ofType":{"ofType":{"ofType":null,"name":"__EnumValue","kind":"OBJECT"},"name":null,"kind":"NON_NULL"},"name":null,"kind":"LIST"},"name":"enumValues","isDeprecated":null,"description":null,"deprecationReason":null,"args":[{"type":{"ofType":null,"name":"Boolean","kind":"SCALAR"},"name":"includeDeprecated","description":null,"defaultValue":"false"}]},{"type":{"ofType":{"ofType":{"ofType":null,"name":"__Field","kind":"OBJECT"},"name":null,"kind":"NON_NULL"},"name":null,"kind":"LIST"},"name":"fields","isDeprecated":null,"description":null,"deprecationReason":null,"args":[{"type":{"ofType":null,"name":"Boolean","kind":"SCALAR"},"name":"includeDeprecated","description":null,"defaultValue":"false"}]},{"type":{"ofType":{"ofType":{"ofType":null,"name":"__InputValue","kind":"OBJECT"},"name":null,"kind":"NON_NULL"},"name":null,"kind":"LIST"},"name":"inputFields","isDeprecated":null,"description":null,"deprecationReason":null,"args":[]},{"type":{"ofType":{"ofType":{"ofType":null,"name":"__Type","kind":"OBJECT"},"name":null,"kind":"NON_NULL"},"name":null,"kind":"LIST"},"name":"interfaces","isDeprecated":null,"description":null,"deprecationReason":null,"args":[]},{"type":{"ofType":{"ofType":null,"name":"__TypeKind","kind":"ENUM"},"name":null,"kind":"NON_NULL"},"name":"kind","isDeprecated":null,"description":null,"deprecationReason":null,"args":[]},{"type":{"ofType":null,"name":"String","kind":"SCALAR"},"name":"name","isDeprecated":null,"description":null,"deprecationReason":null,"args":[]},{"type":{"ofType":null,"name":"__Type","kind":"OBJECT"},"name":"ofType","isDeprecated":null,"description":null,"deprecationReason":null,"args":[]},{"type":{"ofType":{"ofType":{"ofType":null,"name":"__Type","kind":"OBJECT"},"name":null,"kind":"NON_NULL"},"name":null,"kind":"LIST"},"name":"possibleTypes","isDeprecated":null,"description":null,"deprecationReason":null,"args":[]}],"enumValues":null,"description":"The fundamental unit of any GraphQL Schema is the type. There are\nmany kinds of types in GraphQL as represented by the `__TypeKind` enum.\n\nDepending on the kind of a type, certain fields describe\ninformation about that type. Scalar types provide no information\nbeyond a name and description, while Enum types provide their values.\nObject and Interface types provide the fields they describe. Abstract\ntypes, Union and Interface, provide the Object types possible\nat runtime. List and NonNull types compose other types.\n"},{"possibleTypes":null,"name":"__TypeKind","kind":"ENUM","interfaces":null,"inputFields":null,"fields":null,"enumValues":[{"name":"ENUM","isDeprecated":null,"description":"Indicates this type is an enum. `enumValues` is a valid field.","deprecationReason":null},{"name":"INPUT_OBJECT","isDeprecated":null,"description":"Indicates this type is an input object. `inputFields` is a valid field.","deprecationReason":null},{"name":"INTERFACE","isDeprecated":null,"description":"Indicates this type is an interface. `fields` and `possibleTypes` are valid fields.","deprecationReason":null},{"name":"LIST","isDeprecated":null,"description":"Indicates this type is a list. `ofType` is a valid field.","deprecationReason":null},{"name":"NON_NULL","isDeprecated":null,"description":"Indicates this type is a non-null. `ofType` is a valid field.","deprecationReason":null},{"name":"OBJECT","isDeprecated":null,"description":"Indicates this type is an object. `fields` and `interfaces` are valid fields.","deprecationReason":null},{"name":"SCALAR","isDeprecated":null,"description":"Indicates this type is a scalar.","deprecationReason":null},{"name":"UNION","isDeprecated":null,"description":"Indicates this type is a union. `possibleTypes` is a valid field.","deprecationReason":null}],"description":"An enum describing what kind of type a given `__Type` is."}],"subscriptionType":null,"queryType":{"name":"Query"},"mutationType":{"name":"Mutation"},"directives":null}}}